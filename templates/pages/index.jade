extends ../layouts/main

block content 

	.content
		h1.headline MFormats SDK
			.headline__subtitle A smart video codec library for C#, VB.NET, Delphi and C++
		.row.excellence
			.row__col.row__col_sw_1 
				.excellence__ico-container
					.excellence__ico.excellence__ico_support
			.row__col.row__col_sw_3
				.excellence__desk 
					.excellence__title Supports multiply video formats
					|FFmpeg with proprietary 
					br
					|implementations of MXF and LXF
			.row__col.row__col_sw_1 
				.excellence__ico-container
					.excellence__ico.excellence__ico_professionalism
			.row__col.row__col_sw_3
				.excellence__desk
					.excellence__title Built for video professionals
					|Audio/video synchronisation, frame
					br
					|accuracy and low  latency
			.row__col.row__col_sw_1
				.excellence__ico-container
					.excellence__ico.excellence__ico_broadcasts
			.row__col.row__col_sw_3
				.excellence__desk
					.excellence__title Works with broadcast I/O
					|Low-latency  integration with Blackmagic, 
					br
					|AJA, DELTACAST, Bluefish and Stream Labs
		a(href="#").btn Download 60-day trial
		h2.headline.headline_h2 A clean, easy-to-use API
			.headline__subtitle.headline__subtitle_h2 for your favourite development language
		.row.code
			.row__col.row__col_sw_1.code__switchers
				.btn.btn_switch.btn_active.js-btn__language(data-language="C#") C#
				.btn.btn_switch.js-btn__language(data-language="C++") C++
				.btn.btn_switch.js-btn__language(data-language="Delphi") Delphi
				.btn.btn_switch VB.NET
			.row__col.row__col_sw_11
				.code__area.js-code__area
					.code__header.converter.js-code__header
						.converter__state.converter__state_active(data-converter="coding") Coding
						.converter__btn
							
							input#converter.converter__checkbox.js-converter__checkbox(type="checkbox" name="converter")
							label.converter__label(for="converter")
								span.converter__switch
						.converter__state(data-converter="encoding") Encoding	
					.code__body
						.code__language.code__language_show.js-code__language(data-language="C#")
							.code__numbers.js-code__numbers 
							.code__content.code__content_show.js-code__content(data-converter="coding").
								MFFactoryClass myFactory =  new MFFactoryClass();
								<br> M_AV_PROPS frameProps = new  M_AV_PROPS();
								<br> frameProps.vidProps.eVideoFormat = eMVideoFormat.eMVF_HD1080_5994i;
								<br> MFFrame createdFrame;
								<br> myFactory.MFFrameCreateFromMem(ref frameProps, lpVideo, 0, 0, out createdFrame, ""; //- w/o audio
								<br> MFWriter myWriter = new MFWriter();
								<br> myWriter.WriterSet(@"c:\testEncoding.mp4", 1, "format='mp4' video::codec='mpeg4' audio::codec='aac'");
								<br>((IMFReceiver)myWriter).ReceiverFramePut(createdFrame, -1, "");
								<br> M_AV_PROPS frameProps =  new M_AV_PROPS();
								<br> frameProps.vidProps.eVideoFormat = eMVideoFormat.eMVF_HD1080_5994i;
								<br> MFWriter myWriter = new MFWriter();
							.code__content.js-code__content(data-converter="encoding").
								MFReader myReader = new MFReader();
								<br>myReader.ReaderOpen(@"D:\video\myClip.mxf", "");
								<br>MFFrame myFrame;
								<br>((IMFSource)myReader).SourceFrameGet(-1, out myFrame, "");
						.code__language.js-code__language(data-language="C++")
							.code__numbers.js-code__numbers 
							.code__content.code__content_show.js-code__content(data-converter="coding").
								IMFFactory* pFactory = NULL;
								<br>::CoCreateInstance(__uuidof(MFFactory), NULL, CLSCTX_ALL, __uuidof(IMFFactory), (void**)&amp;pFactory);
								<br><br>
								M_AV_PROPS avFrameProps = {};
								<br>avFrameProps.vidProps.eVideoFormat = eMVideoFormat.eMVF_HD1080_5994i;
								<br><br>
								IMFFrame* pFrame;
								<br><br>
								pFactory->MFFrameCreateFromMem(avFrameProps, lpVideo, lAudioSamples, lpAudio, &pFrame, NULL);
								<br><br>
								IMFWriter* pWriter = NULL;
								<br>::CoCreateInstance(__uuidof(MFWriter), NULL, CLSCTX_ALL, __uuidof(IMFWriter), (void**)&pFactory);
								<br><br>
								BSTR bsFileName = ::SysAllocString(L"c:\testEncoding.mp4");
								<br>BSTR bsOptions = ::SysAllocString(L"format='mp4' video::codec='mpeg4' audio::codec='aac'");
								<br>pWriter->WriterSet(bsFileName, 1, bsOptions);
								<br>::SysFreeString(bsOptions);
								<br>::SysFreeString(bsFileName);
								<br><br>
								pWriter->ReceiverFramePut(pFrame, -1, NULL);
								<br><br>
								pFrame->Release();
								<br>pWriter->Release();
								<br>pFactory->Release();
							.code__content.js-code__content(data-converter="encoding").
								IMFReader* pReader = NULL;
								<br>::CoCreateInstance(__uuidof(MFReader), NULL, CLSCTX_ALL, __uuidof(IMFReader), (void**)&pReader);
								<br><br>
								BSTR bsFileName = ::SysAllocString(L"D:\video\myClip.mxf");
								<br>pReader->ReaderOpen(bsFileName, NULL);
								<br>
								<br>::SysFreeString(bsFileName);
								<br><br>
								IMFFrame* pFrame;
								<br>pReader->SourceFrameGet(-1, &pFrame, NULL);
								<br><br>
								pFrame->Release();
								<br>pReader->ReaderClose();
								<br>pReader->Release();
						.code__language.js-code__language(data-language="Delphi")
							.code__numbers.js-code__numbers 
							.code__content.code__content_show.js-code__content(data-converter="coding").
								Dim myFactory As New MFFactoryClass()
								<br>Dim frameProps As New M_AV_PROPS()
								<br>frameProps.vidProps.eVideoFormat = eMVideoFormat.eMVF_HD1080_5994i
								<br>Dim createdFrame As MFFrame
								<br>myFactory.MFFrameCreateFromMem(frameProps, lpVideo, lAudioSamples, lpAudio, <<br>createdFrame, "")
								<br>Dim myWriter As New MFWriter()
								<br>myWriter.WriterSet("c:\testEncoding.mp4", 1, "format='mp4' video::codec='mpeg4' audio::codec='aac'")
								<br>myWriter.ReceiverFramePut(createdFrame, -1, "")
							.code__content.js-code__content(data-converter="encoding").
								Dim myReader As New MFReader()
								<br>myReader.ReaderOpen(@"D:\video\myClip.mxf", "")
								<br>Dim myFrame As MFFrame
								<br>myReader.SourceFrameGet(-1, myFrame, "")

		h2.headline.headline_h2 Supported formats
			.headline__subtitle.headline__subtitle_h2 Containers, codecs, network streams and features
		.support
			.support__headline File formats
			.support__body
				.row.support__item
					.row__col.support__subtitle MP4
					.row__col.support__status o
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle WOV
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle DV
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle MPEG-TS
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle MPEG-PS
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle FLV
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle ASF/WMV
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle AVI
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle DVD-video
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle MXF
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E
				.row.support__item
					.row__col.support__subtitle LXF
					.row__col.support__status S
					.row__col.support__status.support__status_pro P
					.row__col.support__status E